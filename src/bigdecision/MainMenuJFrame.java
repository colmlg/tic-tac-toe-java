package bigdecision;

import ttt.james.server.TTTWebService;
import ttt.james.server.TTTWebService_Service;

/**
 *
 * @author Colm
 */
public class MainMenuJFrame extends javax.swing.JFrame {

    private final TTTWebService service = new TTTWebService_Service().getTTTWebServicePort();
    private final MainCoordinator coordinator;
    private final int userId;

    /**
     * Creates new form MainMenuJFrame
     *
     * @param coordinator
     * @param userId
     */
    public MainMenuJFrame(MainCoordinator coordinator, int userId) {
        this.coordinator = coordinator;
        this.userId = userId;
        initComponents();
        setLocationRelativeTo(null);
        updateTables();
    }
    
    private void updateTables() {
        updateMyGamesTable();
        updateOpenGamesTable();
    }

    private void updateOpenGamesTable() {
        String response = service.showOpenGames();

        switch (response) {
            case ErrorCodes.NO_GAMES:
                openGamesTable.setModel(new OpenGamesTableModel(new String[0][0]));
            case ErrorCodes.DB:
                errorLabel.setText("Error connecting to database.");
                break;
            default:
                OpenGamesTableModel model = new OpenGamesTableModel(response);
                openGamesTable.setModel(model);
                break;
        }
    }
    
     private void updateMyGamesTable() {
        String response = service.showAllMyGames(userId);

        switch (response) {
            case ErrorCodes.NO_GAMES:
                myGamesTable.setModel(new MyGamesTableModel(new String[0][0]));
            case ErrorCodes.DB:
                errorLabel.setText("Error connecting to database.");
                break;
            default:
                MyGamesTableModel model = new MyGamesTableModel(response);
                myGamesTable.setModel(model);
                break;
        }
    }

    private void openGame() {
        int row = myGamesTable.getSelectedRow();
        if (row == -1) {
            return;
        }
        String value = myGamesTable.getValueAt(row, MyGamesTableModel.GAME_ID_COLUMN).toString();
        int gameId = Integer.parseInt(value);
        coordinator.goToGameScreen(userId, gameId);
    }

    private void joinGame() {
        int row = openGamesTable.getSelectedRow();
        if (row == -1) {
            return;
        }
        String value = openGamesTable.getValueAt(row, OpenGamesTableModel.GAME_ID_COLUMN).toString();
        int gameId = Integer.parseInt(value);
        String response = service.joinGame(userId, gameId);
        switch (response) {
            case ErrorCodes.DB:
                errorLabel.setText("Error connecting to database.");
                break;
            case "0":
                break;
            case "1":
                updateTables();
        }
    }

    private void newGame() {
        String response = service.newGame(userId);
        try {
            int gameId = Integer.parseInt(response);
            updateOpenGamesTable();
        } catch (NumberFormatException e) {
            errorLabel.setText("Error creating game.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        myScoresButton = new javax.swing.JButton();
        leaderboardButton = new javax.swing.JButton();
        newGameButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        openGamesTable = new javax.swing.JTable();
        joinGameButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        myGamesTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        errorLabel = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tic Tac Toe - Main Menu");

        myScoresButton.setText("My Scores");
        myScoresButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myScoresButtonActionPerformed(evt);
            }
        });

        leaderboardButton.setText("Leaderboard");
        leaderboardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leaderboardButtonActionPerformed(evt);
            }
        });

        newGameButton.setText("New Game");
        newGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newGameButtonActionPerformed(evt);
            }
        });

        openGamesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(openGamesTable);

        joinGameButton.setText("Join Game");
        joinGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                joinGameButtonActionPerformed(evt);
            }
        });

        myGamesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(myGamesTable);

        jButton1.setText("Open Game");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        errorLabel.setForeground(new java.awt.Color(255, 0, 0));
        errorLabel.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(joinGameButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(myScoresButton)
                .addGap(18, 18, 18)
                .addComponent(leaderboardButton)
                .addGap(18, 18, 18)
                .addComponent(newGameButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(errorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(joinGameButton)
                .addGap(11, 11, 11)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(errorLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(myScoresButton)
                    .addComponent(leaderboardButton)
                    .addComponent(newGameButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void myScoresButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myScoresButtonActionPerformed
        updateTables();
    }//GEN-LAST:event_myScoresButtonActionPerformed

    private void leaderboardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leaderboardButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_leaderboardButtonActionPerformed

    private void newGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newGameButtonActionPerformed
        newGame();
    }//GEN-LAST:event_newGameButtonActionPerformed

    private void joinGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_joinGameButtonActionPerformed
        joinGame();
    }//GEN-LAST:event_joinGameButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        openGame();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel errorLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton joinGameButton;
    private javax.swing.JButton leaderboardButton;
    private javax.swing.JTable myGamesTable;
    private javax.swing.JButton myScoresButton;
    private javax.swing.JButton newGameButton;
    private javax.swing.JTable openGamesTable;
    // End of variables declaration//GEN-END:variables
}
